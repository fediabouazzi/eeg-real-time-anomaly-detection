version: '3'

services:
  zookeeper:
    image: bitnami/zookeeper:3.8
    container_name: zookeeper
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2181:2181"

  kafka:
    image: bitnami/kafka:3.5
    container_name: kafka
    env_file:
      - .env
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper

  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_DB: capteur_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  trainer:
    build:
      context: .
      dockerfile: Dockerfile.trainer
    env_file:
      - .env
    depends_on:
      - kafka

  consumer:
    build:
      context: .
      dockerfile: Dockerfile.consumer
    env_file:
      - .env
    depends_on:
      - kafka
      - trainer

  streamlit:
    build:
      context: .
      dockerfile: Dockerfile.streamlit
    env_file:
      - .env
    ports:
      - "8501:8501"
    volumes:
      - .:/app
    depends_on:
      - consumer

  eeg_test:
    build:
      context: ./eeg_end_to_end
      dockerfile: Dockerfile.E2e
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    volumes:
      - ./eeg_end_to_end:/app
    depends_on:
      - kafka
    command: python eeg_end_to_end_test.py

volumes:
  postgres_data:

